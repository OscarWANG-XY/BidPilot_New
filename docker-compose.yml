#version: '3.8'

services:
  # 数据库服务
  db:
    image: postgres:14.17 # # 这个名字不要改，使用官方镜像名
    ports:
      - "5432:5432"
    container_name: bidpilot_dev_db # 修改：更明确的容器名称
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - bidpilot_network

  # Redis服务
  redis:
    image: redis:7.2-alpine # 这个名字不要改，使用官方镜像名
    container_name: bidpilot_dev_redis # 修改：更明确的容器名称
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - bidpilot_network

  # Celery worker服务
  celery_worker:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    image: bidpilot/celery-worker:dev  # 添加：明确指定镜像名称和标签
    container_name: bidpilot_dev_celery_worker # 修改：更明确的容器名称
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app  # 开发时使用挂载卷实现热重载
      - celery_worker_logs_dev:/app/logs  # 添加：新增命名卷存储日志
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: celery -A config worker -l info
    restart: unless-stopped
    networks:
      - bidpilot_network

  # 后端Django服务
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    image: bidpilot/backend:dev  # 添加：明确指定镜像名称和标签
    container_name: bidpilot_dev_backend  # 修改：更明确的容器名称
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - static_dev_volume:/app/static
      - media_dev_volume:/app/media
      - backend_logs_dev:/app/logs  # 添加：新增命名卷存储日志
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - bidpilot_network

  # 前端React服务
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    image: bidpilot/frontend:dev  # 添加：明确指定镜像名称和标签
    container_name: bidpilot_dev_frontend  # 修改：更明确的容器名称
    volumes:
      - ./frontend:/app  # 开发时使用挂载卷实现热重载
      - /app/node_modules  # 避免覆盖node_modules
      - frontend_cache_dev:/app/.cache  # 添加：新增命名卷存储缓存
    env_file:
      - .env
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - bidpilot_network

  # Tiptap服务
  tiptap:
    build:
      context: .
      dockerfile: docker/tiptap/Dockerfile
    image: bidpilot/tiptap:dev  # 添加：明确指定镜像名称和标签
    container_name: bidpilot_dev_tiptap  # 修改：更明确的容器名称
    volumes:
      - ./tiptap-service:/app  # 开发时使用挂载卷实现热重载
      - /app/node_modules  # 避免覆盖node_modules
      - tiptap_cache_dev:/app/.cache  # 添加：新增命名卷存储缓存
    env_file:
      - .env
    environment:
      - PORT=3001
    ports:
      - "3001:3001"
    restart: unless-stopped
    networks:
      - bidpilot_network

  # Nginx代理服务
  nginx:
    image: nginx:alpine  # 这个名字不要改，使用官方镜像名
    container_name: bidpilot_dev_nginx  # 修改：更明确的容器名称
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs_dev:/var/log/nginx  # 添加：新增命名卷存储日志
    depends_on:
      - backend
      - frontend
      - tiptap
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - bidpilot_network

networks:
  bidpilot_network:
    name: bidpilot_dev_network  # 添加：明确指定网络名称
    driver: bridge  #明确指定网络驱动类型为桥接模式

volumes:
  postgres_dev_data:
    name: bidpilot_postgres_dev_data  # 添加：明确指定卷名
  redis_dev_data:
    name: bidpilot_redis_dev_data  # 添加：明确指定卷名
  static_dev_volume:
    name: bidpilot_static_dev_volume  # 添加：明确指定卷名
  media_dev_volume:
    name: bidpilot_media_dev_volume  # 添加：明确指定卷名
  celery_worker_logs_dev:  # 添加：新增命名卷
    name: bidpilot_celery_worker_logs_dev
  backend_logs_dev:  # 添加：新增命名卷
    name: bidpilot_backend_logs_dev
  frontend_cache_dev:  # 添加：新增命名卷
    name: bidpilot_frontend_cache_dev
  tiptap_cache_dev:  # 添加：新增命名卷
    name: bidpilot_tiptap_cache_dev
  nginx_logs_dev:  # 添加：新增命名卷
    name: bidpilot_nginx_logs_dev


